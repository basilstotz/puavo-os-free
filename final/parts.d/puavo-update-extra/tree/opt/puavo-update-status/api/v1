#!/bin/bash

#http://www.yolinux.com/TUTORIALS/BashShellCgi.html
printf "Content-type: text/plain\n\n"



#/usr/bin/env

first=0


objects=""
entity=""
action=""

objects=$(echo $PATH_INFO | cut -d"/" -f2)
entity=$(echo $PATH_INFO | cut -d"/" -f3)
action=$(echo $PATH_INFO | cut -d"/" -f4)


sql="/tmp/rest.sql"


device=""
cols="host,image,phase,progress,uptime,percentage,state,wlan "

init_table(){
test -f $sql && rm $sql

sql_cmd="create table devices ( avahi, hosttype, $cols );"
echo $sql_cmd  | sqlite3 $sql

sql_cmd="insert into devices ( avahi, hosttype, $cols ) values ( 'Avahi', 'Hosttpype', 'Host', 'Image', 'Phase', 'Progress', 'Uptime', 'Battery', 'State', 'Wlan' );"
echo $sql_cmd  | sqlite3 $sql
}


call_remote(){
    local name=$1
    local aktion=$2

    local addr=$(avahi-resolve -4 -n $name.local 2>/dev/null | xargs | cut -d\  -f2)
    if test -n "$addr" ;then
        if fping -a $addr >/dev/null 2>&1;then
	    wget -O - http://$addr:1649/api/v1/devices/localhost/$aktion 2>/dev/null|xargs
	fi
    fi
 }

ip(){
    local a=$1
    local b=$2
    local p=$3

    echo $(( a + ( ( b - a ) * p ) / 100 ))
}


calc_progress(){
    local phase=$1
    local percent=$2
    
    if test $phase = "starting";then
	printf "0"
    elif test $phase = "checkum_fetch";then
	printf "%s" $( ip 0 1 $percent)
    elif test $phase = "rdiff_fetch";then
	printf "%s" $( ip 1 75 $percent)
    elif test $phase = "rdiff_cecksum";then
	printf "%s" $( ip 75 80 $percent)
    elif test $phase = "image_patch";then
	printf "%s" $( ip 80 90 $percent)
    elif test $phase = "image_donwload";then
	printf "%s" $( ip 1 90 $percent)
    elif test $phase = "image_sync";then
	printf "%s" $( ip 1 90 $percent)
    elif test $phase = "image_checksum";then
	printf "%s" $( ip 90 100 $percent)
    elif test $phase = "finished";then
        printf "100"
    else
	printf "???"
    fi
    
}


get_status(){
    local hostT="host"
    local host=$(hostname)
    local hosttypeT="hosttype"
    local hosttype=$(puavo-conf puavo.hosttype)

    if test "$hosttype" = "laptop";then
       local update=$(cat /images/image_update.stats|xargs)
       local power=$(upower -i /org/freedesktop/UPower/devices/battery_BAT0| \
		      grep "state:\|percentage:"|sed -e "s/://g"|sed -e "s/%//g"|xargs)    
       local wlanT="wlan"
       local wlan=$(iwconfig 2>/dev/null|grep Quality|xargs|cut -d\  -f4|cut -d"=" -f2)
       local uptimeT="uptime"
       local uptime=$(cat /proc/uptime | cut -d" " -f1|cut -d"." -f1)
    
       local imageT=$(echo $update | cut -d" " -f1)
       local image=$(basename -s .img $(echo $update | cut -d" " -f2))

       local phaseT=$(echo $update | cut -d" " -f3)
       local phase=$(echo $update | cut -d" " -f4)
       local progressT=$(echo $update | cut -d" " -f5)
       local progress=$(echo $update | cut -d" " -f6)

       local full_progress=$( calc_progress $phase $progress )
       
       local batteryT=$(echo $power | cut -d" " -f1)
       local battery=$(echo $power | cut -d" " -f2)
       local stateT=$(echo $power | cut -d" " -f3)
       local state=$(echo $power | cut -d" " -f4)

       local dev="$hosttypeT $hosttype $hostT $host $imageT $image $phaseT $phase($progress) $progressT $full_progress $uptimeT $uptime $batteryT $battery $stateT $state $wlanT $wlan" 
    else
	local dev="$hosttypeT $hosttype $hostT $host"
    fi
    
    echo $dev
}

gv(){
local value=$1
local found=1
for n in $device; do
    if test $found = 0;then echo $n; return;fi
    if test $n = $value; then found=0;fi
done
}
 

get_list(){
    local l=
    local dev=$(/usr/bin/ip route|grep default|head -n1|xargs|cut -d" "  -f5)
    local liste=$(avahi-browse -at|grep "$dev IPv4 puavo"|xargs|sed -e "s/+ //g"|sed -e "s/local/|/g"|sed -e "s/#/ /g")

#    echo "*****$dev*******"
#    echo $liste
    
     while test -n "$liste";do
        l=$(echo "$liste"|xargs|cut -d"|" -f1)
        liste=$(echo "$liste"|cut -d"|" -f2-)
        if test -n "$l";then 
#	    local hosttype=$(echo $l|xargs|cut -d\  -f4);
	    local hostname=$(echo $l|xargs|cut -d\  -f5);#echo;echo $hostname;echo 
	    device=$(call_remote $hostname "status")  

#local prog="<div class='w3-border'><div class='w3-grey' style='height:24px;width:$(gv percentage)%'></div></div>"
 
            local sql_cmd="insert into devices ( avahi, hosttype, $cols ) values ( '$hostname' , '$(gv hosttype)', '$(gv host)', '$(gv image)', '$(gv phase)', '$(gv progress)', '$(gv uptime)', '$(gv percentage)', '$(gv state)', '$(gv wlan)' );"

	    echo "$sql_cmd" | sqlite3 $sql
	    
	fi
    done

    echo "<table>"
    echo "<thead>"
    echo "select $cols from devices where rowid=1"| sqlite3 -html $sql |xargs
    echo "</thead>"
    echo "<tbody>"
    sql_cmd="select $cols from devices where rowid!=1 and hosttype='laptop' order by host;"
    echo $sql_cmd | sqlite3 -html $sql | xargs
    echo "</tbody>"
    echo "</table>"
}

    
case "$objects" in
    devices)
	case "$entity" in
	    localhost)
		case "$action" in
		    update)
			echo /usr/sbin/puavo-update-client ;;
		    reboot)
			test "$SERVER_ADDR" = "$REMOTE_ADDR" || echo /usr/sbin/reboot ;;
		    poweroff)
			test "$SERVER_ADDR" = "$REMOTE_ADDR" -o "$(puavo-conf puavo.hosttype)" = "bootserver" || echo /usr/sbin/halt ;;
		    status|"")
			get_status ;;
		    *) ;;	    
		esac
	        ;;
	    "")
		init_table
		get_list ;;
	    *)
		case $action in
		    update|poweroff|reboot)
			call_remote $entity $action ;;
		    *) ;;
		esac
	esac
	;;
    *) ;;
esac





exit 0

# REQUEST_URI=/cgi/env.sh/uhu/gaga/mmmmmm?ooo=iiiiiiiii&uuuu=7
# SCRIPT_NAME=/cgi/env.sh
# PATH_INFO=/uhu/gaga/mmmmmm
# QUERY_STRING=ooo=iiiiiiiii&uuuu=7
# REMOTE_ADDR=127.0.0.1
# SERVER_ADDR=127.0.0.1


